<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lgq.dao.BlogMapper">
    <resultMap id="BlogGetByCategoryDTO" type="com.lgq.dto.BlogGetByCategoryDTO">
        <id column="blog_id" jdbcType="INTEGER" property="blogId"/>
        <result column="blog_title" jdbcType="VARCHAR" property="blogTitle"/>
    </resultMap>
    <resultMap id="BlogViewNumDTO" type="com.lgq.dto.BlogViewNumDTO">
        <result column="blog_title" jdbcType="VARCHAR" property="blogTitle"/>
        <result column="blog_views" jdbcType="INTEGER" property="blogViews"/>
        <result column="blog_update_time" jdbcType="INTEGER" property="blogUpdateTime"/>
    </resultMap>
    <resultMap id="BlogCategoryNumDTO" type="com.lgq.dto.BlogCategoryNumDTO">
        <result column="category_name" jdbcType="VARCHAR" property="categoryName"/>
        <result column="num" jdbcType="INTEGER" property="num"/>
        <result column="view" jdbcType="INTEGER" property="view"/>
    </resultMap>
    <resultMap id="BlogGetPreDTO" type="com.lgq.dto.BlogPreGetDTO">
        <id column="blog_id" jdbcType="INTEGER" property="blogId"/>
        <result column="blog_create_time" jdbcType="TIMESTAMP" property="blogCreateTime"/>
        <result column="blog_update_time" jdbcType="TIMESTAMP" property="blogUpdateTime"/>
        <result column="blog_title" jdbcType="VARCHAR" property="blogTitle"/>
        <result column="blog_views" jdbcType="INTEGER" property="blogViews"/>
        <result column="blog_reply" jdbcType="INTEGER" property="blogReply"/>
        <result column="blog_recommend" jdbcType="BIT" property="blogRecommend"/>
        <result column="blog_category_id" jdbcType="INTEGER" property="blogCategoryId"/>
        <result column="category_name" jdbcType="INTEGER" property="blogCategoryName"/>
        <result column="blog_summary" jdbcType="LONGVARCHAR" property="blogSummary"/>
        <result column="blog_cover" jdbcType="VARCHAR" property="blogCover"/>
    </resultMap>
    <!--  自定义-->
    <resultMap id="BlogContentPreGetDTO" type="com.lgq.dto.BlogContentPreGetDTO">
        <id column="blog_id" jdbcType="INTEGER" property="blogId"/>
        <result column="blog_create_time" jdbcType="TIMESTAMP" property="blogCreateTime"/>
        <result column="blog_update_time" jdbcType="TIMESTAMP" property="blogUpdateTime"/>
        <result column="blog_title" jdbcType="VARCHAR" property="blogTitle"/>
        <result column="blog_views" jdbcType="INTEGER" property="blogViews"/>
        <result column="blog_reply" jdbcType="INTEGER" property="blogReply"/>
        <result column="blog_recommend" jdbcType="BIT" property="blogRecommend"/>
        <result column="blog_category_id" jdbcType="INTEGER" property="blogCategoryId"/>
        <result column="category_name" jdbcType="INTEGER" property="blogCategoryName"/>
        <result column="blog_content" jdbcType="LONGVARCHAR" property="blogContent"/>
        <result column="blog_summary" jdbcType="LONGVARCHAR" property="blogSummary"/>
        <result column="blog_cover" jdbcType="VARCHAR" property="blogCover"/>
    </resultMap>
    <resultMap id="BaseResultMap" type="com.lgq.domain.Blog">
        <id column="blog_id" jdbcType="INTEGER" property="blogId"/>
        <result column="blog_create_time" jdbcType="TIMESTAMP" property="blogCreateTime"/>
        <result column="blog_update_time" jdbcType="TIMESTAMP" property="blogUpdateTime"/>
        <result column="blog_title" jdbcType="VARCHAR" property="blogTitle"/>
        <result column="blog_views" jdbcType="INTEGER" property="blogViews"/>
        <result column="blog_reply" jdbcType="INTEGER" property="blogReply"/>
        <result column="blog_recommend" jdbcType="BIT" property="blogRecommend"/>
        <result column="blog_delete_flag" jdbcType="BIT" property="blogDeleteFlag"/>
        <result column="blog_category_id" jdbcType="INTEGER" property="blogCategoryId"/>
        <result column="blog_cover" jdbcType="VARCHAR" property="blogCover"/>
    </resultMap>
    <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.lgq.domain.BlogWithBLOBs">
        <result column="blog_summary" jdbcType="LONGVARCHAR" property="blogSummary"/>
        <result column="blog_content" jdbcType="LONGVARCHAR" property="blogContent"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        blog_id, blog_create_time, blog_update_time, blog_title, blog_views, blog_reply,
    blog_recommend, blog_delete_flag, blog_category_id, blog_cover
    </sql>
    <sql id="Blob_Column_List">
        blog_summary, blog_content
    </sql>
    <select id="selectByExampleWithBLOBs" parameterType="com.lgq.domain.BlogExample" resultMap="ResultMapWithBLOBs">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        ,
        <include refid="Blob_Column_List"/>
        from blog
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByExample" parameterType="com.lgq.domain.BlogExample" resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from blog
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
        select
        <include refid="Base_Column_List"/>
        ,
        <include refid="Blob_Column_List"/>
        from blog
        where blog_id = #{blogId,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete
        from blog
        where blog_id = #{blogId,jdbcType=INTEGER}
    </delete>
    <delete id="deleteByExample" parameterType="com.lgq.domain.BlogExample">
        delete from blog
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.lgq.domain.BlogWithBLOBs">
        insert into blog (blog_id, blog_create_time, blog_update_time,
                          blog_title, blog_views, blog_reply,
                          blog_recommend, blog_delete_flag, blog_category_id,
                          blog_cover, blog_summary, blog_content)
        values (#{blogId,jdbcType=INTEGER}, #{blogCreateTime,jdbcType=TIMESTAMP}, #{blogUpdateTime,jdbcType=TIMESTAMP},
                #{blogTitle,jdbcType=VARCHAR}, #{blogViews,jdbcType=INTEGER}, #{blogReply,jdbcType=INTEGER},
                #{blogRecommend,jdbcType=BIT}, #{blogDeleteFlag,jdbcType=BIT}, #{blogCategoryId,jdbcType=INTEGER},
                #{blogCover,jdbcType=VARCHAR}, #{blogSummary,jdbcType=LONGVARCHAR}, #{blogContent,jdbcType=LONGVARCHAR})
    </insert>
    <insert id="insertSelective" parameterType="com.lgq.domain.BlogWithBLOBs">
        insert into blog
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="blogId != null">
                blog_id,
            </if>
            <if test="blogCreateTime != null">
                blog_create_time,
            </if>
            <if test="blogUpdateTime != null">
                blog_update_time,
            </if>
            <if test="blogTitle != null">
                blog_title,
            </if>
            <if test="blogViews != null">
                blog_views,
            </if>
            <if test="blogReply != null">
                blog_reply,
            </if>
            <if test="blogRecommend != null">
                blog_recommend,
            </if>
            <if test="blogDeleteFlag != null">
                blog_delete_flag,
            </if>
            <if test="blogCategoryId != null">
                blog_category_id,
            </if>
            <if test="blogCover != null">
                blog_cover,
            </if>
            <if test="blogSummary != null">
                blog_summary,
            </if>
            <if test="blogContent != null">
                blog_content,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="blogId != null">
                #{blogId,jdbcType=INTEGER},
            </if>
            <if test="blogCreateTime != null">
                #{blogCreateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="blogUpdateTime != null">
                #{blogUpdateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="blogTitle != null">
                #{blogTitle,jdbcType=VARCHAR},
            </if>
            <if test="blogViews != null">
                #{blogViews,jdbcType=INTEGER},
            </if>
            <if test="blogReply != null">
                #{blogReply,jdbcType=INTEGER},
            </if>
            <if test="blogRecommend != null">
                #{blogRecommend,jdbcType=BIT},
            </if>
            <if test="blogDeleteFlag != null">
                #{blogDeleteFlag,jdbcType=BIT},
            </if>
            <if test="blogCategoryId != null">
                #{blogCategoryId,jdbcType=INTEGER},
            </if>
            <if test="blogCover != null">
                #{blogCover,jdbcType=VARCHAR},
            </if>
            <if test="blogSummary != null">
                #{blogSummary,jdbcType=LONGVARCHAR},
            </if>
            <if test="blogContent != null">
                #{blogContent,jdbcType=LONGVARCHAR},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.lgq.domain.BlogExample" resultType="java.lang.Long">
        select count(*) from blog
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update blog
        <set>
            <if test="record.blogId != null">
                blog_id = #{record.blogId,jdbcType=INTEGER},
            </if>
            <if test="record.blogCreateTime != null">
                blog_create_time = #{record.blogCreateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.blogUpdateTime != null">
                blog_update_time = #{record.blogUpdateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.blogTitle != null">
                blog_title = #{record.blogTitle,jdbcType=VARCHAR},
            </if>
            <if test="record.blogViews != null">
                blog_views = #{record.blogViews,jdbcType=INTEGER},
            </if>
            <if test="record.blogReply != null">
                blog_reply = #{record.blogReply,jdbcType=INTEGER},
            </if>
            <if test="record.blogRecommend != null">
                blog_recommend = #{record.blogRecommend,jdbcType=BIT},
            </if>
            <if test="record.blogDeleteFlag != null">
                blog_delete_flag = #{record.blogDeleteFlag,jdbcType=BIT},
            </if>
            <if test="record.blogCategoryId != null">
                blog_category_id = #{record.blogCategoryId,jdbcType=INTEGER},
            </if>
            <if test="record.blogCover != null">
                blog_cover = #{record.blogCover,jdbcType=VARCHAR},
            </if>
            <if test="record.blogSummary != null">
                blog_summary = #{record.blogSummary,jdbcType=LONGVARCHAR},
            </if>
            <if test="record.blogContent != null">
                blog_content = #{record.blogContent,jdbcType=LONGVARCHAR},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExampleWithBLOBs" parameterType="map">
        update blog
        set blog_id = #{record.blogId,jdbcType=INTEGER},
        blog_create_time = #{record.blogCreateTime,jdbcType=TIMESTAMP},
        blog_update_time = #{record.blogUpdateTime,jdbcType=TIMESTAMP},
        blog_title = #{record.blogTitle,jdbcType=VARCHAR},
        blog_views = #{record.blogViews,jdbcType=INTEGER},
        blog_reply = #{record.blogReply,jdbcType=INTEGER},
        blog_recommend = #{record.blogRecommend,jdbcType=BIT},
        blog_delete_flag = #{record.blogDeleteFlag,jdbcType=BIT},
        blog_category_id = #{record.blogCategoryId,jdbcType=INTEGER},
        blog_cover = #{record.blogCover,jdbcType=VARCHAR},
        blog_summary = #{record.blogSummary,jdbcType=LONGVARCHAR},
        blog_content = #{record.blogContent,jdbcType=LONGVARCHAR}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update blog
        set blog_id = #{record.blogId,jdbcType=INTEGER},
        blog_create_time = #{record.blogCreateTime,jdbcType=TIMESTAMP},
        blog_update_time = #{record.blogUpdateTime,jdbcType=TIMESTAMP},
        blog_title = #{record.blogTitle,jdbcType=VARCHAR},
        blog_views = #{record.blogViews,jdbcType=INTEGER},
        blog_reply = #{record.blogReply,jdbcType=INTEGER},
        blog_recommend = #{record.blogRecommend,jdbcType=BIT},
        blog_delete_flag = #{record.blogDeleteFlag,jdbcType=BIT},
        blog_category_id = #{record.blogCategoryId,jdbcType=INTEGER},
        blog_cover = #{record.blogCover,jdbcType=VARCHAR}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.lgq.domain.BlogWithBLOBs">
        update blog
        <set>
            <if test="blogCreateTime != null">
                blog_create_time = #{blogCreateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="blogUpdateTime != null">
                blog_update_time = #{blogUpdateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="blogTitle != null">
                blog_title = #{blogTitle,jdbcType=VARCHAR},
            </if>
            <if test="blogViews != null">
                blog_views = #{blogViews,jdbcType=INTEGER},
            </if>
            <if test="blogReply != null">
                blog_reply = #{blogReply,jdbcType=INTEGER},
            </if>
            <if test="blogRecommend != null">
                blog_recommend = #{blogRecommend,jdbcType=BIT},
            </if>
            <if test="blogDeleteFlag != null">
                blog_delete_flag = #{blogDeleteFlag,jdbcType=BIT},
            </if>
            <if test="blogCategoryId != null">
                blog_category_id = #{blogCategoryId,jdbcType=INTEGER},
            </if>
            <if test="blogCover != null">
                blog_cover = #{blogCover,jdbcType=VARCHAR},
            </if>
            <if test="blogSummary != null">
                blog_summary = #{blogSummary,jdbcType=LONGVARCHAR},
            </if>
            <if test="blogContent != null">
                blog_content = #{blogContent,jdbcType=LONGVARCHAR},
            </if>
        </set>
        where blog_id = #{blogId,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.lgq.domain.BlogWithBLOBs">
        update blog
        set blog_create_time = #{blogCreateTime,jdbcType=TIMESTAMP},
            blog_update_time = #{blogUpdateTime,jdbcType=TIMESTAMP},
            blog_title       = #{blogTitle,jdbcType=VARCHAR},
            blog_views       = #{blogViews,jdbcType=INTEGER},
            blog_reply       = #{blogReply,jdbcType=INTEGER},
            blog_recommend   = #{blogRecommend,jdbcType=BIT},
            blog_delete_flag = #{blogDeleteFlag,jdbcType=BIT},
            blog_category_id = #{blogCategoryId,jdbcType=INTEGER},
            blog_cover       = #{blogCover,jdbcType=VARCHAR},
            blog_summary     = #{blogSummary,jdbcType=LONGVARCHAR},
            blog_content     = #{blogContent,jdbcType=LONGVARCHAR}
        where blog_id = #{blogId,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.lgq.domain.Blog">
        update blog
        set blog_create_time = #{blogCreateTime,jdbcType=TIMESTAMP},
            blog_update_time = #{blogUpdateTime,jdbcType=TIMESTAMP},
            blog_title       = #{blogTitle,jdbcType=VARCHAR},
            blog_views       = #{blogViews,jdbcType=INTEGER},
            blog_reply       = #{blogReply,jdbcType=INTEGER},
            blog_recommend   = #{blogRecommend,jdbcType=BIT},
            blog_delete_flag = #{blogDeleteFlag,jdbcType=BIT},
            blog_category_id = #{blogCategoryId,jdbcType=INTEGER},
            blog_cover       = #{blogCover,jdbcType=VARCHAR}
        where blog_id = #{blogId,jdbcType=INTEGER}
    </update>
    <select id="getBlogList" resultMap="BlogGetPreDTO">
        select blog_id
             , blog_create_time
             , blog_update_time
             , blog_title
             , blog_views
             , blog_reply
             , blog_recommend
             , blog_category_id
             , category_name
             , blog_summary
             , blog_cover
        from blog,
             category
        where blog_category_id = category_id
          and blog_delete_flag = 0
    </select>

    <select id="getBlogCount" resultType="java.lang.Long">
        select count(*)
        from blog
        where blog_delete_flag = 0;
    </select>

    <select id="getBlogListByCategory" resultMap="BlogGetByCategoryDTO" parameterType="java.lang.Integer">
        select blog_id, blog_title, blog_create_time
        from blog
        where blog_category_id = #{id}
    </select>
    <select id="getBlogContentById" resultMap="BlogContentPreGetDTO" parameterType="java.lang.Integer">
        select blog_id
             , blog_create_time
             , blog_update_time
             , blog_title
             , blog_views
             , blog_reply
             , blog_recommend
             , blog_category_id
             , category_name
             , blog_content
             , blog_cover
             , blog_summary
        from blog,
             category
        where blog_category_id = category_id
          and blog_delete_flag = 0
          and blog_id = #{id}
    </select>
    <select id="getBlogCategoryNum" resultMap="BlogCategoryNumDTO">
        select category_name, count(*) as num, sum(blog_views) as view
        from blog,
             category
        where category_id = blog_category_id
        GROUP BY category_id;
    </select>

    <select id="selectCreateTimeList" resultType="java.util.Date">
        select blog_create_time
        from blog;
    </select>

    <select id="getBlogViewNum" resultMap="BlogViewNumDTO">
        select blog_title, blog_views, blog_update_time
        from blog
        order by blog_views desc
        limit 10
    </select>


</mapper>